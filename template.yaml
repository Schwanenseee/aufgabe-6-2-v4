kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: petclinic-ds-test4
  annotations:
    openshift.io/display-name: "Petclinic beispiel"
    description: "ein einfaches petclinic beispiel"
    iconClass: "icon-play"
    tags: "java"

parameters:
  - name: SOURCE_IMAGE_URL
    description: die url wo zu meinem docker image fÃ¼hrt
    value: ghcr.io/schwanenseee/petclinic-app:v2
    required: true

  - name: DATABASE_NAME
    description: name der petclinic database
    value: petclinic-ds-test4
    required: true

  - name: DATABASE_USER
    description: The user for the MySQL Database
    value: petclinic-ds-test4
    required: true

  - name: DATABASE_PASSWORD
    description: The password for the MySQL Database
    value: petclinic-ds-test4
    required: true

objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: petclinic-mysql
      labels:
        app: petclinic-mysql
        app.kubernetes.io/part-of: petclinic-ds-test4
      finalizers:
        - kubernetes.io/pvc-protection  
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: rbd-storagepool-cluster
      volumeMode: Filesystem

  - kind: Secret
    apiVersion: v1
    metadata:
      name: petclinic-mysql
      labels:
        app: petclinic-mysql
        app.kubernetes.io/part-of: petclinic-ds-test4
      annotations:
        template.openshift.io/expose-username: "{.data['database-user']}"
        template.openshift.io/expose-password: "{.data['database-password']}"
        template.openshift.io/expose-root_password: "{.data['database-root-password']}"
        template.openshift.io/expose-database_name: "{.data['database-name']}"
    stringData:
      database-user: "${DATABASE_USER}"
      database-password: "${DATABASE_PASSWORD}"
      database-root-password: "${DATABASE_PASSWORD}"
      database-name: "${DATABASE_NAME}"

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: petclinic-mysql
      labels:
        app: petclinic-mysql
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
      replicas: 1
      selector:
        matchLabels:
          app: petclinic-mysql
      template:
        metadata:
          labels:
            app: petclinic-mysql
        spec:
          volumes:
            - name: petclinic-mysql-data
              persistentVolumeClaim:
                claimName: petclinic-mysql
          containers:
            - name: petclinic-mysql
              resources:
                limits:
                  memory: 1Gi
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              livenessProbe:
                exec:
                  command:
                    - /bin/sh
                    - '-i'
                    - '-c'
                    - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              env:
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-user
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-password
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-root-password
                - name: MYSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-name
              ports:
                - containerPort: 3306
                  protocol: TCP
              volumeMounts:
                - name: petclinic-mysql-data
                  mountPath: /var/lib/mysql/data
              image: >-
                image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:ac25ce04966621fb2ad47f99cbf6644f39822a1efcad8cbd0d49fb1222215f73
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: petclinic-app
      labels:
        app: petclinic-app
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: petclinic-app
      template:
        metadata:
          labels:
            app: petclinic-app
        spec:
          containers:
            - name: petclinic-app
              image: ${SOURCE_IMAGE_URL}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
              env:
                - name: SPRING_PROFILES_ACTIVE
                  value: mysql
                - name: MYSQL_URL
                  value: 'jdbc:mysql://petclinic-mysql:3306/${DATABASE_NAME}'
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
        revisionHistoryLimit: 10
        progressDeadlineSeconds: 600

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: petclinic-phpmyadmin
      labels:
        app: petclinic-phpmyadmin
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: petclinic-phpmyadmin
      template:
        metadata:
          labels:
            app: petclinic-phpmyadmin
        spec:
          containers:
            - name: petclinic-phpmyadmin
              image: bitnami/phpmyadmin
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
              env:
                - name: DATABASE_HOST
                  value: petclinic-mysql
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: petclinic-mysql
                      key: database-password
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
        revisionHistoryLimit: 10
        progressDeadlineSeconds: 600

  - kind: Service
    apiVersion: v1
    metadata:
      name: petclinic-mysql
      labels:
        app: petclinic-mysql
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      ports:
        - name: petclinic-mysql
          protocol: TCP
          port: 3306
          targetPort: 3306
      internalTrafficPolicy: Cluster
      type: ClusterIP
      ipFamilyPolicy: SingleStack
      sessionAffinity: None
      selector:
        app: petclinic-mysql

  - kind: Service
    apiVersion: v1
    metadata:
      name: petclinic-app
      labels:
        app: petclinic-app
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: 8443-tcp
          protocol: TCP
          port: 8443
          targetPort: 8443
      internalTrafficPolicy: Cluster
      type: ClusterIP
      ipFamilyPolicy: SingleStack
      sessionAffinity: None
      selector:
        app: petclinic-app

  - kind: Service
    apiVersion: v1
    metadata:
      name: petclinic-phpmyadmin
      labels:
        app: petclinic-phpmyadmin
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: 8443-tcp
          protocol: TCP
          port: 8443
          targetPort: 8443
      internalTrafficPolicy: Cluster
      type: ClusterIP
      ipFamilyPolicy: SingleStack
      sessionAffinity: None
      selector:
        app: petclinic-phpmyadmin

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: petclinic-app
      labels:
        app: petclinic-app
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      to:
        kind: Service
        name: petclinic-app
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: petclinic-phpmyadmin
      labels:
        app: petclinic-phpmyadmin
        app.kubernetes.io/part-of: petclinic-ds-test4
    spec:
      to:
        kind: Service
        name: petclinic-phpmyadmin
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None